create table test_table(
    test_id number generated by DEFAULT on null as identity,
    test_char char(2),
    test_varchar varchar2(2),
    constraint TEST_PK PRIMARY KEY(test_id)
);

insert into TEST_TABLE(TEST_CHAR, TEST_VARCHAR)values('a ', 'a ');
insert into TEST_TABLE(TEST_CHAR, TEST_VARCHAR)values('a', 'a');


select * from TEST_TABLE;

select * from test_table where TEST_CHAR = 'a '; --deze haalt alles op omdat hij bij die 2e row die test_char is(omdat het char is ofc)
                                                --convert naar een a met een extra space

---Bij blank padded is 'a ' = 'a', maar bij non padded is het 'a ' > 'a', omdat
--die a met die extra space meer ascii values heeft or sth??
--verder zet oracle ook nog een extra space bij die eerste om het equal te maken but doesnt do that with the 2nd one(a varchar2)
--Blank padded wordt gebruikt voor datatype CHAR, NCHAR, text literals, or values returned by the USER function.
--Non padded wordt gebruikt voor the datatype VARCHAR2 or NVARCHAR2.


select * from test_table where TEST_VARCHAR = 'a ';
--deze haalt alleen die 2e row op. Omdat hij een varchar is wordt niets geconvert.




--meer info over blank padding and non padding
CREATE TABLE ducks (f CHAR(6), v VARCHAR2(6));

insert into ducks values('DUCK', 'DUCK');


select '*'||f||'*' "char", '*'||v||'*' "varchar" from ducks;
--Because Oracle blank-pads CHAR values, the value of f is blank-padded to 6 bytes. v is not blank-padded and has length 4.